;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Jun  1 18:08:33 2021
;; Desktop file format version 208
;; Emacs version 25.3.50.1
(setq revive:frame-configuration-to-restore
  '(progn 
     (revive:restore-frame '((tool-bar-position . top) (explicit-name) (icon-name) (bottom-divider-width . 0) (right-divider-width . 0) (top . 30) (left . 1243) (unsplittable) (modeline . t) (width . 75) (height . 30) (visibility . t) (cursor-color . "Red") (background-mode . light) (fringe) (fullscreen) (alpha) (scroll-bar-height . 0) (scroll-bar-width . 15) (cursor-type . box) (auto-lower) (auto-raise) (icon-type) (title) (buffer-predicate) (tool-bar-lines . 1) (menu-bar-lines . 1) (right-fringe . 8) (left-fringe . 1) (line-spacing) (background-color . "White") (foreground-color . "Black") (horizontal-scroll-bars) (vertical-scroll-bars . right) (internal-border-width . 0) (border-width . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (fontsize . 0)) '(75 30 ((0 0 78 29)) ((nil "*Help*" 81 1 nil))))
     (revive:restore-frame '((tool-bar-position . top) (explicit-name) (icon-name) (bottom-divider-width . 0) (right-divider-width . 0) (top . 30) (left . 1243) (unsplittable) (modeline . t) (width . 75) (height . 30) (visibility . t) (cursor-color . "Red") (background-mode . light) (fringe) (fullscreen) (alpha) (scroll-bar-height . 0) (scroll-bar-width . 15) (cursor-type . box) (auto-lower) (auto-raise) (icon-type) (title) (buffer-predicate) (tool-bar-lines . 1) (menu-bar-lines . 1) (right-fringe . 8) (left-fringe . 1) (line-spacing) (background-color . "White") (foreground-color . "Black") (horizontal-scroll-bars) (vertical-scroll-bars . right) (internal-border-width . 0) (border-width . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (fontsize . 0)) '(75 30 ((0 0 78 14) (0 14 78 28)) ((nil "*Messages*" 3532 2889 nil) (nil "*Packages*" 98267 97592 nil))))))

;; Global section:
(setq desktop-saved-frameset [frameset 1 (24758 45025 445353 0) (desktop . "208") "simon@MacBook-Pro.local" nil nil ((((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "Black") (background-color . "White") (line-spacing) (left-fringe . 1) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (fringe) (display-type . color) (background-mode . light) (cursor-color . "Red") (visibility . t) (frameset--id . "152B-1495-102C-1DBD") (frameset--mini t) (height . 30) (width . 75) (modeline . t) (minibuffer . t) (unsplittable) (left . 1243) (top . 30) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "MacBook-Pro.local") (explicit-name) (tool-bar-position . top)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 64) (min-pixel-width . 70) (min-pixel-height-ignore . 32) (min-pixel-width-ignore . 38) (min-pixel-height-safe . 16) (min-pixel-width-safe . 14)) leaf (pixel-width . 549) (pixel-height . 464) (total-width . 78) (total-height . 29) (normal-height . 1.0) (normal-width . 1.0) (buffer "*Help*" (selected . t) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated . t) (point . 81) (start . 1))) (((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "Black") (background-color . "White") (line-spacing) (left-fringe . 1) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (fringe) (display-type . color) (background-mode . light) (cursor-color . "Red") (visibility . t) (frameset--id . "FB74-F33A-9545-32C9") (frameset--mini t) (height . 30) (width . 75) (modeline . t) (minibuffer . t) (unsplittable) (left . 1243) (top . 30) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "MacBook-Pro.local") (explicit-name) (tool-bar-position . top)) ((min-height . 8) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 6) (min-height-safe . 2) (min-width-safe . 2) (min-pixel-height . 128) (min-pixel-width . 70) (min-pixel-height-ignore . 64) (min-pixel-width-ignore . 38) (min-pixel-height-safe . 32) (min-pixel-width-safe . 14)) vc (pixel-width . 549) (pixel-height . 464) (total-width . 78) (total-height . 29) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (leaf (pixel-width . 549) (pixel-height . 232) (total-width . 78) (total-height . 14) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Messages*" (selected) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated . t) (point . 3532) (start . 2889))) (leaf (last . t) (pixel-width . 549) (pixel-height . 232) (total-width . 78) (total-height . 14) (normal-height . 0.5) (normal-width . 1.0) (buffer "*Packages*" (selected) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 98267) (start . 97592)))) (((font-backend mac-ct) (fontsize . 0) (font . "-*-Monaco-normal-normal-normal-*-12-*-*-*-m-0-iso10646-1") (border-width . 0) (internal-border-width . 0) (vertical-scroll-bars . right) (horizontal-scroll-bars) (foreground-color . "Black") (background-color . "White") (line-spacing) (left-fringe . 1) (right-fringe . 8) (menu-bar-lines . 1) (tool-bar-lines . 1) (title) (icon-type) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 15) (scroll-bar-height . 0) (alpha) (fullscreen) (display-type . color) (background-mode . light) (cursor-color . "Red") (visibility) (environment) (mouse-color . "black") (fringe) (frameset--id . "2075-4591-6742-7765") (frameset--mini t . t) (height . 36) (width . 80) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 25) (right-divider-width . 0) (bottom-divider-width . 0) (icon-name) (display . "MacBook-Pro.local") (explicit-name) (tool-bar-position . top)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 6) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 64) (min-pixel-width . 70) (min-pixel-height-ignore . 30) (min-pixel-width-ignore . 38) (min-pixel-height-safe . 16) (min-pixel-width-safe . 14)) leaf (pixel-width . 591) (pixel-height . 490) (total-width . 84) (total-height . 35) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected) (hscroll . 0) (fringes 1 8 nil) (margins nil) (scroll-bars nil 3 t nil 0 nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("dash" "solve" "smar" "smart" "smark" "counsel" "intero" "verbose" "enqueuemostrecentfiles" "target" "new-moni" "enqueue" "enqueuemostrecentfiles" "new" "main" "new"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d/quelpa/melpa/recipes/smartparens" "~/.emacs.d/init.el" "~/.emacs.d/init_bash.sh" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/stack.yaml" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/package.yaml" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/stack.yaml" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/package.yaml" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/stack.yaml" "~/.emacs.d/quelpa/melpa/recipes/smartparens" "~/.emacs.d/init.el" "~/.emacs.d/haskell-setup.el" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Script.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/TAGS" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Script.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/uninstall-hs.sh" "~/.bashrc" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Script.hs" "~/.emacs.d/haskell-setup.el" "~/.emacs.d/init.el" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Script.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/package.yaml" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Script.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/App.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/lib/Reactive/Controllers.hs" "~/My Mac (MacBook-Pro.local)/Documents/Haskell/VLC/TAGS" "~/" "~/untitled folder/options.yaml" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/test/refine_struct.lean" "~/lean/lf-freelist/main.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/excl.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/base_logic/lib/own.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/base_logic/lib/iprop.v" "~/.opam/coq-8.12/lib/coq/user-contrib/stdpp/fin_maps.v" "~/.opam/coq-8.12/lib/coq/user-contrib/stdpp/pmap.v" "~/.opam/coq-8.12/lib/coq/user-contrib/stdpp/mapset.v" "~/.opam/coq-8.12/lib/coq/user-contrib/stdpp/gmap.v" "~/lean/lf-freelist/main.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/ufrac.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/dra.v" "/Users/simon/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/lib/" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/frac.v" "~/lean/lf-freelist/main.v" "~/.opam/coq-8.12/lib/coq/theories/Numbers/BinNums.v" "~/lean/lf-freelist/main.v" "/Users/simon/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/lib/frac_auth.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/lib/excl_auth.v" "~/.opam/coq-8.12/lib/coq/user-contrib/stdpp/gmap.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/auth.v" "~/.opam/coq-8.12/lib/coq/user-contrib/iris/algebra/gmap.v" "~/lean/lf-freelist/main.v" "/Users/simon/lean/iris-ref-count/main.v~" "/Users/simon/lean/iris-ref-count/main2.v" "~/lean/lf-freelist/main.v" "~/lean/iris-ref-count/reader_writer_lock.v" "/Users/simon/lean/iris-ref-count/" "/Users/simon/lean/iris-ref-count/*.v" "~/lean/iris-ref-count/RA2.v" "~/lean/lf-freelist/main.v" "/Users/simon/.emacs.d/ivy-setup.el" "~/.emacs.d/init.el" "~/lean/lean-master/src/frontends/lean/structure_cmd.cpp" "~/lean/mathlib/test/refine_struct.lean" "~/lean/lean-master/src/frontends/lean/util.cpp" "~/lean/lean-master/src/frontends/lean/elaborator.cpp" "~/lean/lean-master/src/library/fun_info.cpp" "~/lean/lean-master/src/frontends/lean/parser.cpp" "~/lean/lean-master/src/library/tactic/apply_tactic.cpp" "/Users/simon/lean/lean-master/" "~/.elan/toolchains/leanprover-community-lean-3.28.0/lib/lean/library/init/meta/name.lean" "~/.elan/toolchains/leanprover-community-lean-3.28.0/lib/lean/library/init/meta/expr.lean" "~/.elan/toolchains/leanprover-community-lean-3.28.0/lib/lean/library/init/meta/interactive.lean" "~/lean/mathlib/src/tactic/interactive.lean" "~/lean/mathlib/src/tactic/core.lean" "/Users/simon/lean/mathlib/src/data/list/defs.lean" "/Users/simon/lean/mathlib/src/data/list/defs.olean" "~/lean/mathlib/src/data/list/sigma.lean" "/Users/simon/.emacs.d/helm-setup.el" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/src/data/prod.lean" "~/lean/mathlib/src/data/prod/defs.lean" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/src/data/prod.lean" "/Users/simon/lean/mathlib/src/data/list/" "~/lean/mathlib/src/data/list/sigma.lean" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/src/data/list/prod.lean" "~/lean/mathlib/src/tactic/interactive.lean" "~/lean/mathlib/src/data/list/defs.lean" "/Users/simon/lean/mathlib/src/data/pprod.lean" "~/lean/mathlib/src/data/list/sigma.lean" "~/lean/mathlib/src/data/list/defs.lean" "~/.elan/toolchains/leanprover-community-lean-3.28.0/lib/lean/library/init/data/list/basic.lean" "~/lean/mathlib/src/tactic/core.lean" "~/lean/mathlib/src/meta/expr.lean" "~/.elan/toolchains/leanprover-community-lean-3.28.0/lib/lean/library/init/meta/tactic.lean" "~/lean/mathlib/src/tactic/binder_matching.lean" "~/.emacs.d/init.el" "~/lean/mathlib/src/tactic/interactive.lean" "~/lean/mathlib/src/tactic/core.lean"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 208
  "/Users/simon/Library/Application Support/Aquamacs Emacs/scratch buffer"
  "*scratch*"
  'text-mode
  '(auto-fill-mode smart-spacing-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (truncate-lines))
  '((mark-ring nil)))

